// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Cookie struct {
	CookieValue          string   `protobuf:"bytes,1,opt,name=cookieValue,proto3" json:"cookieValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cookie) Reset()         { *m = Cookie{} }
func (m *Cookie) String() string { return proto.CompactTextString(m) }
func (*Cookie) ProtoMessage()    {}
func (*Cookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_691350d34b974d1f, []int{0}
}
func (m *Cookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookie.Unmarshal(m, b)
}
func (m *Cookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookie.Marshal(b, m, deterministic)
}
func (dst *Cookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookie.Merge(dst, src)
}
func (m *Cookie) XXX_Size() int {
	return xxx_messageInfo_Cookie.Size(m)
}
func (m *Cookie) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookie.DiscardUnknown(m)
}

var xxx_messageInfo_Cookie proto.InternalMessageInfo

func (m *Cookie) GetCookieValue() string {
	if m != nil {
		return m.CookieValue
	}
	return ""
}

type Credentials struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_691350d34b974d1f, []int{1}
}
func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (dst *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(dst, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Credentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Credentials) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type UserInfo struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_691350d34b974d1f, []int{2}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (dst *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(dst, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type Bool struct {
	Resp                 bool     `protobuf:"varint,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bool) Reset()         { *m = Bool{} }
func (m *Bool) String() string { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()    {}
func (*Bool) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_691350d34b974d1f, []int{3}
}
func (m *Bool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bool.Unmarshal(m, b)
}
func (m *Bool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bool.Marshal(b, m, deterministic)
}
func (dst *Bool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bool.Merge(dst, src)
}
func (m *Bool) XXX_Size() int {
	return xxx_messageInfo_Bool.Size(m)
}
func (m *Bool) XXX_DiscardUnknown() {
	xxx_messageInfo_Bool.DiscardUnknown(m)
}

var xxx_messageInfo_Bool proto.InternalMessageInfo

func (m *Bool) GetResp() bool {
	if m != nil {
		return m.Resp
	}
	return false
}

func init() {
	proto.RegisterType((*Cookie)(nil), "auth.Cookie")
	proto.RegisterType((*Credentials)(nil), "auth.Credentials")
	proto.RegisterType((*UserInfo)(nil), "auth.UserInfo")
	proto.RegisterType((*Bool)(nil), "auth.Bool")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	Create(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*Cookie, error)
	Delete(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*Bool, error)
	Info(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*UserInfo, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Create(ctx context.Context, in *Credentials, opts ...grpc.CallOption) (*Cookie, error) {
	out := new(Cookie)
	err := c.cc.Invoke(ctx, "/auth.Auth/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Delete(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/auth.Auth/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Info(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/auth.Auth/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	Create(context.Context, *Credentials) (*Cookie, error)
	Delete(context.Context, *Cookie) (*Bool, error)
	Info(context.Context, *Cookie) (*UserInfo, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Credentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Create(ctx, req.(*Credentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cookie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Delete(ctx, req.(*Cookie))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cookie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Info(ctx, req.(*Cookie))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Auth_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Auth_Delete_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Auth_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_auth_691350d34b974d1f) }

var fileDescriptor_auth_691350d34b974d1f = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x13, 0x5d, 0x96, 0x38, 0x15, 0xc1, 0x39, 0x48, 0xc8, 0xa9, 0x2c, 0x52, 0x44, 0xa1,
	0x07, 0x7d, 0x02, 0x8d, 0x17, 0xaf, 0x05, 0xbd, 0x79, 0x18, 0xed, 0x48, 0x8b, 0x31, 0x1b, 0x66,
	0x77, 0xf5, 0xec, 0x9b, 0x4b, 0x26, 0x8d, 0x34, 0x97, 0xde, 0xfe, 0x6f, 0xbe, 0x21, 0xf9, 0x67,
	0x01, 0x28, 0xc5, 0xcd, 0xb2, 0x13, 0x1f, 0x3d, 0x9a, 0x3e, 0xbb, 0x6b, 0xb0, 0xb5, 0xf7, 0x9f,
	0x5b, 0xc6, 0x39, 0xcc, 0xde, 0x35, 0xbd, 0x50, 0x93, 0xb8, 0xcc, 0xe7, 0xf9, 0xd5, 0xc9, 0x6a,
	0x7f, 0xe4, 0x5e, 0x61, 0x56, 0x0b, 0xaf, 0xb9, 0x8d, 0x5b, 0x6a, 0x02, 0x56, 0x50, 0xa4, 0xc0,
	0xd2, 0xd2, 0xd7, 0xb8, 0xfd, 0xcf, 0xbd, 0xeb, 0x28, 0x84, 0x1f, 0x2f, 0xeb, 0xf2, 0x68, 0x70,
	0x23, 0xe3, 0x05, 0x58, 0xfa, 0xa6, 0x48, 0x52, 0x1e, 0xab, 0xd9, 0x91, 0x5b, 0x40, 0xf1, 0x1c,
	0x58, 0x9e, 0xda, 0x0f, 0x7f, 0xe8, 0xdb, 0xae, 0x02, 0xf3, 0xe0, 0x7d, 0x83, 0x08, 0x46, 0x38,
	0x74, 0xea, 0x8b, 0x95, 0xe6, 0xdb, 0xdf, 0x1c, 0xcc, 0x7d, 0x8a, 0x1b, 0xbc, 0x01, 0x5b, 0x0b,
	0x53, 0x64, 0x3c, 0x5f, 0xea, 0xd1, 0x7b, 0xcd, 0xab, 0xd3, 0xdd, 0x48, 0x6f, 0x73, 0x19, 0x5e,
	0x82, 0x7d, 0xe4, 0x86, 0x23, 0xe3, 0xc4, 0x54, 0x30, 0x50, 0xff, 0x37, 0x97, 0xe1, 0x02, 0x8c,
	0x76, 0x9b, 0xee, 0x9c, 0x0d, 0x34, 0x36, 0x77, 0xd9, 0x9b, 0xd5, 0xf7, 0xbd, 0xfb, 0x0b, 0x00,
	0x00, 0xff, 0xff, 0x15, 0x4e, 0x16, 0xc7, 0x6d, 0x01, 0x00, 0x00,
}
